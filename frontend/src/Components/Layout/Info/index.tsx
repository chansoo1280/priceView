// #region Global Imports
import Head from "next/head"
import { useRouter } from "next/router"
import { useDispatch, useSelector } from "react-redux"
// #endregion Global Imports

// #region Local Imports
import { SizeCode, Header, Button, Title } from "@Components"
import { IStore } from "@Interfaces"
import { StarActions } from "@Actions"
import { ILayout } from "../Layout"
import { StyledWrap } from "./styled"
// #endregion Local Imports

export const Info = function ({ children, cate_info }: ILayout.IProps) {
    const star = useSelector((state: IStore) => state.star)
    const getIsStar = () => star.list.find((seq: number) => seq === cate_info?.seq) !== undefined
    const dispatch = useDispatch()
    const router = useRouter()
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/xeicon@2.3.3/xeicon.min.css"></link>
            </Head>
            <StyledWrap className="l_wrap">
                <Header>
                    <Button onClick={() => router.back()}>
                        <i className="xi-angle-left"></i>
                        <span className="ir">뒤로가기</span>
                    </Button>
                    <Title>{cate_info?.name}</Title>
                    <Button
                        show={!getIsStar()}
                        onClick={() => {
                            if (cate_info === undefined) return
                            dispatch(
                                StarActions.AddStar({
                                    seq: cate_info.seq,
                                }),
                            )
                        }}
                    >
                        <i className="xi-star-o"></i>
                        <span className="ir">즐겨찾기 추가</span>
                    </Button>
                    <Button
                        show={getIsStar()}
                        onClick={() => {
                            if (cate_info === undefined) return
                            dispatch(
                                StarActions.RemoveStar({
                                    seq: cate_info.seq,
                                }),
                            )
                        }}
                    >
                        <i className="xi-star"></i>
                        <span className="ir">즐겨찾기 삭제</span>
                    </Button>
                </Header>
                {children}
            </StyledWrap>
        </>
    )
}
